// Copyright 2022 The jackal Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.9
// source: proto/model/v1/pubsub.proto

package pubsubmodel

import (
	stravaganza "github.com/jackal-xmpp/stravaganza"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NodeType represents a node type.
type NodeType int32

const (
	NodeType_NT_UNKNOWN    NodeType = 0
	NodeType_NT_LEAF       NodeType = 1
	NodeType_NT_COLLECTION NodeType = 2
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0: "NT_UNKNOWN",
		1: "NT_LEAF",
		2: "NT_COLLECTION",
	}
	NodeType_value = map[string]int32{
		"NT_UNKNOWN":    0,
		"NT_LEAF":       1,
		"NT_COLLECTION": 2,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_model_v1_pubsub_proto_enumTypes[0].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_proto_model_v1_pubsub_proto_enumTypes[0]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{0}
}

// NodeAccessModel represents a node access model.
type NodeAccessModel int32

const (
	NodeAccessModel_NAM_UNKNOWN   NodeAccessModel = 0
	NodeAccessModel_NAM_AUTHORIZE NodeAccessModel = 1
	NodeAccessModel_NAM_OPEN      NodeAccessModel = 2
	NodeAccessModel_NAM_PRESENCE  NodeAccessModel = 3
	NodeAccessModel_NAM_ROSTER    NodeAccessModel = 4
	NodeAccessModel_NAM_WHITELIST NodeAccessModel = 5
)

// Enum value maps for NodeAccessModel.
var (
	NodeAccessModel_name = map[int32]string{
		0: "NAM_UNKNOWN",
		1: "NAM_AUTHORIZE",
		2: "NAM_OPEN",
		3: "NAM_PRESENCE",
		4: "NAM_ROSTER",
		5: "NAM_WHITELIST",
	}
	NodeAccessModel_value = map[string]int32{
		"NAM_UNKNOWN":   0,
		"NAM_AUTHORIZE": 1,
		"NAM_OPEN":      2,
		"NAM_PRESENCE":  3,
		"NAM_ROSTER":    4,
		"NAM_WHITELIST": 5,
	}
)

func (x NodeAccessModel) Enum() *NodeAccessModel {
	p := new(NodeAccessModel)
	*p = x
	return p
}

func (x NodeAccessModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeAccessModel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_model_v1_pubsub_proto_enumTypes[1].Descriptor()
}

func (NodeAccessModel) Type() protoreflect.EnumType {
	return &file_proto_model_v1_pubsub_proto_enumTypes[1]
}

func (x NodeAccessModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeAccessModel.Descriptor instead.
func (NodeAccessModel) EnumDescriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{1}
}

// AffiliationState represents a pubsub node affiliation state.
type AffiliationState int32

const (
	AffiliationState_AFF_NONE         AffiliationState = 0
	AffiliationState_AFF_OWNER        AffiliationState = 1
	AffiliationState_AFF_PUBLISHER    AffiliationState = 2
	AffiliationState_AFF_PUBLISH_ONLY AffiliationState = 3
	AffiliationState_AFF_MEMBER       AffiliationState = 4
	AffiliationState_AFF_OUTCAST      AffiliationState = 5
)

// Enum value maps for AffiliationState.
var (
	AffiliationState_name = map[int32]string{
		0: "AFF_NONE",
		1: "AFF_OWNER",
		2: "AFF_PUBLISHER",
		3: "AFF_PUBLISH_ONLY",
		4: "AFF_MEMBER",
		5: "AFF_OUTCAST",
	}
	AffiliationState_value = map[string]int32{
		"AFF_NONE":         0,
		"AFF_OWNER":        1,
		"AFF_PUBLISHER":    2,
		"AFF_PUBLISH_ONLY": 3,
		"AFF_MEMBER":       4,
		"AFF_OUTCAST":      5,
	}
)

func (x AffiliationState) Enum() *AffiliationState {
	p := new(AffiliationState)
	*p = x
	return p
}

func (x AffiliationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AffiliationState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_model_v1_pubsub_proto_enumTypes[2].Descriptor()
}

func (AffiliationState) Type() protoreflect.EnumType {
	return &file_proto_model_v1_pubsub_proto_enumTypes[2]
}

func (x AffiliationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AffiliationState.Descriptor instead.
func (AffiliationState) EnumDescriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{2}
}

// SubscriptionState represents a pubsub node subscription state.
type SubscriptionState int32

const (
	SubscriptionState_SUB_NONE         SubscriptionState = 0
	SubscriptionState_SUB_PENDING      SubscriptionState = 1
	SubscriptionState_SUB_SUBSCRIBED   SubscriptionState = 2
	SubscriptionState_SUB_UNCONFIGURED SubscriptionState = 3
)

// Enum value maps for SubscriptionState.
var (
	SubscriptionState_name = map[int32]string{
		0: "SUB_NONE",
		1: "SUB_PENDING",
		2: "SUB_SUBSCRIBED",
		3: "SUB_UNCONFIGURED",
	}
	SubscriptionState_value = map[string]int32{
		"SUB_NONE":         0,
		"SUB_PENDING":      1,
		"SUB_SUBSCRIBED":   2,
		"SUB_UNCONFIGURED": 3,
	}
)

func (x SubscriptionState) Enum() *SubscriptionState {
	p := new(SubscriptionState)
	*p = x
	return p
}

func (x SubscriptionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_model_v1_pubsub_proto_enumTypes[3].Descriptor()
}

func (SubscriptionState) Type() protoreflect.EnumType {
	return &file_proto_model_v1_pubsub_proto_enumTypes[3]
}

func (x SubscriptionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionState.Descriptor instead.
func (SubscriptionState) EnumDescriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{3}
}

// Options represents a pubsub node options.
type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language              string   `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Title                 string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description           string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DeliverPayloads       bool     `protobuf:"varint,4,opt,name=deliver_payloads,json=deliverPayloads,proto3" json:"deliver_payloads,omitempty"`
	DeliverNotifications  bool     `protobuf:"varint,5,opt,name=deliver_notifications,json=deliverNotifications,proto3" json:"deliver_notifications,omitempty"`
	NotifyConfig          bool     `protobuf:"varint,6,opt,name=notify_config,json=notifyConfig,proto3" json:"notify_config,omitempty"`
	NotifyDelete          bool     `protobuf:"varint,7,opt,name=notify_delete,json=notifyDelete,proto3" json:"notify_delete,omitempty"`
	NotifyRetract         bool     `protobuf:"varint,8,opt,name=notify_retract,json=notifyRetract,proto3" json:"notify_retract,omitempty"`
	NotifySub             bool     `protobuf:"varint,9,opt,name=notify_sub,json=notifySub,proto3" json:"notify_sub,omitempty"`
	PersistItems          bool     `protobuf:"varint,10,opt,name=persist_items,json=persistItems,proto3" json:"persist_items,omitempty"`
	MaxItems              int64    `protobuf:"varint,11,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
	ItemExpire            uint64   `protobuf:"varint,12,opt,name=item_expire,json=itemExpire,proto3" json:"item_expire,omitempty"`
	Subscribe             bool     `protobuf:"varint,13,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	AccessModel           string   `protobuf:"bytes,14,opt,name=access_model,json=accessModel,proto3" json:"access_model,omitempty"`
	RosterGroupsAllowed   []string `protobuf:"bytes,15,rep,name=roster_groups_allowed,json=rosterGroupsAllowed,proto3" json:"roster_groups_allowed,omitempty"`
	PublishModel          string   `protobuf:"bytes,16,opt,name=publish_model,json=publishModel,proto3" json:"publish_model,omitempty"`
	PurgeOffline          bool     `protobuf:"varint,17,opt,name=purge_offline,json=purgeOffline,proto3" json:"purge_offline,omitempty"`
	MaxPayloadSize        int64    `protobuf:"varint,18,opt,name=max_payload_size,json=maxPayloadSize,proto3" json:"max_payload_size,omitempty"`
	SendLastPublishedItem string   `protobuf:"bytes,19,opt,name=send_last_published_item,json=sendLastPublishedItem,proto3" json:"send_last_published_item,omitempty"`
	PresenceBasedDelivery bool     `protobuf:"varint,20,opt,name=presence_based_delivery,json=presenceBasedDelivery,proto3" json:"presence_based_delivery,omitempty"`
	NotificationType      string   `protobuf:"bytes,21,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Type                  string   `protobuf:"bytes,22,opt,name=type,proto3" json:"type,omitempty"`
	BodyXslt              string   `protobuf:"bytes,23,opt,name=body_xslt,json=bodyXslt,proto3" json:"body_xslt,omitempty"`
	DataformXslt          string   `protobuf:"bytes,24,opt,name=dataform_xslt,json=dataformXslt,proto3" json:"dataform_xslt,omitempty"`
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{0}
}

func (x *Options) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Options) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Options) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Options) GetDeliverPayloads() bool {
	if x != nil {
		return x.DeliverPayloads
	}
	return false
}

func (x *Options) GetDeliverNotifications() bool {
	if x != nil {
		return x.DeliverNotifications
	}
	return false
}

func (x *Options) GetNotifyConfig() bool {
	if x != nil {
		return x.NotifyConfig
	}
	return false
}

func (x *Options) GetNotifyDelete() bool {
	if x != nil {
		return x.NotifyDelete
	}
	return false
}

func (x *Options) GetNotifyRetract() bool {
	if x != nil {
		return x.NotifyRetract
	}
	return false
}

func (x *Options) GetNotifySub() bool {
	if x != nil {
		return x.NotifySub
	}
	return false
}

func (x *Options) GetPersistItems() bool {
	if x != nil {
		return x.PersistItems
	}
	return false
}

func (x *Options) GetMaxItems() int64 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

func (x *Options) GetItemExpire() uint64 {
	if x != nil {
		return x.ItemExpire
	}
	return 0
}

func (x *Options) GetSubscribe() bool {
	if x != nil {
		return x.Subscribe
	}
	return false
}

func (x *Options) GetAccessModel() string {
	if x != nil {
		return x.AccessModel
	}
	return ""
}

func (x *Options) GetRosterGroupsAllowed() []string {
	if x != nil {
		return x.RosterGroupsAllowed
	}
	return nil
}

func (x *Options) GetPublishModel() string {
	if x != nil {
		return x.PublishModel
	}
	return ""
}

func (x *Options) GetPurgeOffline() bool {
	if x != nil {
		return x.PurgeOffline
	}
	return false
}

func (x *Options) GetMaxPayloadSize() int64 {
	if x != nil {
		return x.MaxPayloadSize
	}
	return 0
}

func (x *Options) GetSendLastPublishedItem() string {
	if x != nil {
		return x.SendLastPublishedItem
	}
	return ""
}

func (x *Options) GetPresenceBasedDelivery() bool {
	if x != nil {
		return x.PresenceBasedDelivery
	}
	return false
}

func (x *Options) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *Options) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Options) GetBodyXslt() string {
	if x != nil {
		return x.BodyXslt
	}
	return ""
}

func (x *Options) GetDataformXslt() string {
	if x != nil {
		return x.DataformXslt
	}
	return ""
}

// Node represents a node in the pubsub tree.
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Host    string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Name    string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Parent  string   `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Type    NodeType `protobuf:"varint,5,opt,name=type,proto3,enum=model.pubsub.v1.NodeType" json:"type,omitempty"`
	Options *Options `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *Node) GetType() NodeType {
	if x != nil {
		return x.Type
	}
	return NodeType_NT_UNKNOWN
}

func (x *Node) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

// Nodes represents a set of pubsub nodes.
type Nodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Nodes) Reset() {
	*x = Nodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nodes) ProtoMessage() {}

func (x *Nodes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nodes.ProtoReflect.Descriptor instead.
func (*Nodes) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{2}
}

func (x *Nodes) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Affiliation represents a pubsub node affiliation.
type Affiliation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int64            `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Jid    string           `protobuf:"bytes,2,opt,name=jid,proto3" json:"jid,omitempty"`
	State  AffiliationState `protobuf:"varint,3,opt,name=state,proto3,enum=model.pubsub.v1.AffiliationState" json:"state,omitempty"`
}

func (x *Affiliation) Reset() {
	*x = Affiliation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Affiliation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affiliation) ProtoMessage() {}

func (x *Affiliation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affiliation.ProtoReflect.Descriptor instead.
func (*Affiliation) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{3}
}

func (x *Affiliation) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Affiliation) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *Affiliation) GetState() AffiliationState {
	if x != nil {
		return x.State
	}
	return AffiliationState_AFF_NONE
}

// Affiliations represents a set of pubsub affiliations.
type Affiliations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Affiliations []*Affiliation `protobuf:"bytes,1,rep,name=affiliations,proto3" json:"affiliations,omitempty"`
}

func (x *Affiliations) Reset() {
	*x = Affiliations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Affiliations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affiliations) ProtoMessage() {}

func (x *Affiliations) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affiliations.ProtoReflect.Descriptor instead.
func (*Affiliations) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{4}
}

func (x *Affiliations) GetAffiliations() []*Affiliation {
	if x != nil {
		return x.Affiliations
	}
	return nil
}

// Subscription represents a pubsub node subscription.
type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeId int64             `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Jid    string            `protobuf:"bytes,3,opt,name=jid,proto3" json:"jid,omitempty"`
	State  SubscriptionState `protobuf:"varint,4,opt,name=state,proto3,enum=model.pubsub.v1.SubscriptionState" json:"state,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{5}
}

func (x *Subscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subscription) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Subscription) GetJid() string {
	if x != nil {
		return x.Jid
	}
	return ""
}

func (x *Subscription) GetState() SubscriptionState {
	if x != nil {
		return x.State
	}
	return SubscriptionState_SUB_NONE
}

// Subscriptions represents a set of pubsub subscriptions.
type Subscriptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*Subscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *Subscriptions) Reset() {
	*x = Subscriptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscriptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscriptions) ProtoMessage() {}

func (x *Subscriptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscriptions.ProtoReflect.Descriptor instead.
func (*Subscriptions) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{6}
}

func (x *Subscriptions) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

// Item represents a pubsub node item.
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeId    int64                  `protobuf:"varint,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Publisher string                 `protobuf:"bytes,3,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Payload   *stravaganza.PBElement `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{7}
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Item) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *Item) GetPayload() *stravaganza.PBElement {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Items represents a set of pubsub items.
type Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Items) Reset() {
	*x = Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_model_v1_pubsub_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_proto_model_v1_pubsub_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_proto_model_v1_pubsub_proto_rawDescGZIP(), []int{8}
}

func (x *Items) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_proto_model_v1_pubsub_proto protoreflect.FileDescriptor

var file_proto_model_v1_pubsub_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x34,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x63, 0x6b, 0x61,
	0x6c, 0x2d, 0x78, 0x6d, 0x70, 0x70, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x76, 0x61, 0x67, 0x61, 0x6e,
	0x7a, 0x61, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x76, 0x61, 0x67, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x07, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12,
	0x33, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f,
	0x73, 0x75, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x53, 0x75, 0x62, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x67, 0x65, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x78, 0x73, 0x6c, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x64, 0x79, 0x58, 0x73, 0x6c, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x78, 0x73, 0x6c, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x58, 0x73, 0x6c, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x34, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x71, 0x0a, 0x0b, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64,
	0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x50, 0x0a, 0x0c, 0x41, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x66, 0x66,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61,
	0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6a, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70,
	0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x54, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7f, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x76, 0x61,
	0x67, 0x61, 0x6e, 0x7a, 0x61, 0x2e, 0x50, 0x42, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x34, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x3a,
	0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x54,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x54,
	0x5f, 0x4c, 0x45, 0x41, 0x46, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x54, 0x5f, 0x43, 0x4f,
	0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x2a, 0x78, 0x0a, 0x0f, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0f, 0x0a,
	0x0b, 0x4e, 0x41, 0x4d, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x41, 0x4d, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x4e, 0x41, 0x4d, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x41, 0x4d, 0x5f, 0x52, 0x4f, 0x53, 0x54, 0x45, 0x52, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x4c, 0x49,
	0x53, 0x54, 0x10, 0x05, 0x2a, 0x79, 0x0a, 0x10, 0x41, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x46, 0x46, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x46, 0x46, 0x5f, 0x4f, 0x57,
	0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x46, 0x46, 0x5f, 0x50, 0x55, 0x42,
	0x4c, 0x49, 0x53, 0x48, 0x45, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x46, 0x46, 0x5f,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x41, 0x46, 0x46, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x04, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x46, 0x46, 0x5f, 0x4f, 0x55, 0x54, 0x43, 0x41, 0x53, 0x54, 0x10, 0x05, 0x2a,
	0x5c, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x55, 0x42, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x55, 0x42, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x55, 0x42, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43,
	0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x55, 0x42, 0x5f, 0x55,
	0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x03, 0x42, 0x1f, 0x5a,
	0x1d, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x75, 0x62, 0x73, 0x75,
	0x62, 0x2f, 0x3b, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_model_v1_pubsub_proto_rawDescOnce sync.Once
	file_proto_model_v1_pubsub_proto_rawDescData = file_proto_model_v1_pubsub_proto_rawDesc
)

func file_proto_model_v1_pubsub_proto_rawDescGZIP() []byte {
	file_proto_model_v1_pubsub_proto_rawDescOnce.Do(func() {
		file_proto_model_v1_pubsub_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_model_v1_pubsub_proto_rawDescData)
	})
	return file_proto_model_v1_pubsub_proto_rawDescData
}

var file_proto_model_v1_pubsub_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_model_v1_pubsub_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_model_v1_pubsub_proto_goTypes = []interface{}{
	(NodeType)(0),                 // 0: model.pubsub.v1.NodeType
	(NodeAccessModel)(0),          // 1: model.pubsub.v1.NodeAccessModel
	(AffiliationState)(0),         // 2: model.pubsub.v1.AffiliationState
	(SubscriptionState)(0),        // 3: model.pubsub.v1.SubscriptionState
	(*Options)(nil),               // 4: model.pubsub.v1.Options
	(*Node)(nil),                  // 5: model.pubsub.v1.Node
	(*Nodes)(nil),                 // 6: model.pubsub.v1.Nodes
	(*Affiliation)(nil),           // 7: model.pubsub.v1.Affiliation
	(*Affiliations)(nil),          // 8: model.pubsub.v1.Affiliations
	(*Subscription)(nil),          // 9: model.pubsub.v1.Subscription
	(*Subscriptions)(nil),         // 10: model.pubsub.v1.Subscriptions
	(*Item)(nil),                  // 11: model.pubsub.v1.Item
	(*Items)(nil),                 // 12: model.pubsub.v1.Items
	(*stravaganza.PBElement)(nil), // 13: stravaganza.PBElement
}
var file_proto_model_v1_pubsub_proto_depIdxs = []int32{
	0,  // 0: model.pubsub.v1.Node.type:type_name -> model.pubsub.v1.NodeType
	4,  // 1: model.pubsub.v1.Node.options:type_name -> model.pubsub.v1.Options
	5,  // 2: model.pubsub.v1.Nodes.nodes:type_name -> model.pubsub.v1.Node
	2,  // 3: model.pubsub.v1.Affiliation.state:type_name -> model.pubsub.v1.AffiliationState
	7,  // 4: model.pubsub.v1.Affiliations.affiliations:type_name -> model.pubsub.v1.Affiliation
	3,  // 5: model.pubsub.v1.Subscription.state:type_name -> model.pubsub.v1.SubscriptionState
	9,  // 6: model.pubsub.v1.Subscriptions.subscriptions:type_name -> model.pubsub.v1.Subscription
	13, // 7: model.pubsub.v1.Item.payload:type_name -> stravaganza.PBElement
	11, // 8: model.pubsub.v1.Items.items:type_name -> model.pubsub.v1.Item
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_model_v1_pubsub_proto_init() }
func file_proto_model_v1_pubsub_proto_init() {
	if File_proto_model_v1_pubsub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_model_v1_pubsub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Affiliation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Affiliations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscriptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_model_v1_pubsub_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_model_v1_pubsub_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_model_v1_pubsub_proto_goTypes,
		DependencyIndexes: file_proto_model_v1_pubsub_proto_depIdxs,
		EnumInfos:         file_proto_model_v1_pubsub_proto_enumTypes,
		MessageInfos:      file_proto_model_v1_pubsub_proto_msgTypes,
	}.Build()
	File_proto_model_v1_pubsub_proto = out.File
	file_proto_model_v1_pubsub_proto_rawDesc = nil
	file_proto_model_v1_pubsub_proto_goTypes = nil
	file_proto_model_v1_pubsub_proto_depIdxs = nil
}
